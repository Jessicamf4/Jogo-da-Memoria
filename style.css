* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
 height: 100vh;  
 display: flex; 
 background-color: aquamarine;

}

header { 
    margin: 10px;
    top: 0;
    width: 100%;
    z-index: 10;
    

    
}

.título {
    font-size: 40px; 
    font-family:  'Times New Roman';
    color: rgb(113, 88, 136);
   text-align: center;
   display: flexbox;
   flex-direction: row;
   flex-wrap: wrap;

}

.memory-game {
   
    height: 800px;
    width: 800px;
    margin: auto;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    /*quebra as cartas*/
    perspective: 1300px;
}

.card {
    
    height: calc(35% - 10px);
    width: calc(35% - 10px);
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px rgba(1, 1, 1, .3);
    cursor: pointer;
    transform: scale(1);
    transform-style: preserve-3d;
    /*Não deixa o elemento achatado no plano */
    transition: transform .9s;

}

.card:active{
    transform: scale(0.97);
    transition: transform .3s;
/*click com umaprofundidade*/
}


.card-front,
.card-back {
    width: 100%;
    height: 100%;
    padding: 20px;
    position: absolute;
    /*deixou uma imagem por cima da outra*/
    border-radius: 5px;
    background: #ffffff;
    backface-visibility: hidden;
    /*uma propriedade que retira o verso do elemento*/
   
}

.card-front{
    transform: rotateY(180deg);
    /* rotacionar a carta*/
}

/**flip card animation*/

.card.flip {
    transform: rotateY(180deg);
}
/* todo elemento virado ao contrário é ele espelhado*/

button {
    
    color: rgb(105, 71, 184);
    border-color: azure;
    height: 40px;
    width: 80px;
    background-color: rgb(223, 221, 126);
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 3pc;
    font-size: 12px;
    border:3px rgba(1, 1, 1, .3);
    text-align: center;
    display: flexbox;
    flex-direction:row


}

/* remove a interação do toch e mouse do elemento "pai"*/
.button {
    pointer-events: none;
}

/* restaura a interação do toch e mouse a todos elementos "filhos", incluindo os botões e outros */
.button > * {
    pointer-events: auto;
}

/* aplica o vermelhor ao passar o mouse sob o elemento pai mas somente quando for possivel "interagir" com pointer-events */
.button:hover > [class*=box] {
    background-color:rgb(147, 170, 221);
}
